// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: platform/v1/object.proto

package platformv1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

// ObjectType enumerates all object types supported by the platform.
type ObjectType int32

const (
	// Default value when no enumeration is specified.
	ObjectType_OBJECT_TYPE_INVALID ObjectType = 0
	// Explicitly Unknown object value.
	ObjectType_OBJECT_TYPE_UNKNOWN           ObjectType = 1
	ObjectType_OBJECT_TYPE_ARTIFACT          ObjectType = 2
	ObjectType_OBJECT_TYPE_AUTONOMOUS_SYSTEM ObjectType = 3
	ObjectType_OBJECT_TYPE_DIRECTORY         ObjectType = 4
	ObjectType_OBJECT_TYPE_DOMAIN_NAME       ObjectType = 5
	ObjectType_OBJECT_TYPE_EMAIL_ADDRESS     ObjectType = 6
	ObjectType_OBJECT_TYPE_EMAIL_MESSAGE     ObjectType = 7
	ObjectType_OBJECT_TYPE_FILE              ObjectType = 8
	ObjectType_OBJECT_TYPE_IPV4              ObjectType = 9
	ObjectType_OBJECT_TYPE_IPV6              ObjectType = 10
	ObjectType_OBJECT_TYPE_MAC_ADDRESS       ObjectType = 11
	ObjectType_OBJECT_TYPE_MUTEX             ObjectType = 12
	ObjectType_OBJECT_TYPE_URL               ObjectType = 13
)

var ObjectType_name = map[int32]string{
	0:  "OBJECT_TYPE_INVALID",
	1:  "OBJECT_TYPE_UNKNOWN",
	2:  "OBJECT_TYPE_ARTIFACT",
	3:  "OBJECT_TYPE_AUTONOMOUS_SYSTEM",
	4:  "OBJECT_TYPE_DIRECTORY",
	5:  "OBJECT_TYPE_DOMAIN_NAME",
	6:  "OBJECT_TYPE_EMAIL_ADDRESS",
	7:  "OBJECT_TYPE_EMAIL_MESSAGE",
	8:  "OBJECT_TYPE_FILE",
	9:  "OBJECT_TYPE_IPV4",
	10: "OBJECT_TYPE_IPV6",
	11: "OBJECT_TYPE_MAC_ADDRESS",
	12: "OBJECT_TYPE_MUTEX",
	13: "OBJECT_TYPE_URL",
}

var ObjectType_value = map[string]int32{
	"OBJECT_TYPE_INVALID":           0,
	"OBJECT_TYPE_UNKNOWN":           1,
	"OBJECT_TYPE_ARTIFACT":          2,
	"OBJECT_TYPE_AUTONOMOUS_SYSTEM": 3,
	"OBJECT_TYPE_DIRECTORY":         4,
	"OBJECT_TYPE_DOMAIN_NAME":       5,
	"OBJECT_TYPE_EMAIL_ADDRESS":     6,
	"OBJECT_TYPE_EMAIL_MESSAGE":     7,
	"OBJECT_TYPE_FILE":              8,
	"OBJECT_TYPE_IPV4":              9,
	"OBJECT_TYPE_IPV6":              10,
	"OBJECT_TYPE_MAC_ADDRESS":       11,
	"OBJECT_TYPE_MUTEX":             12,
	"OBJECT_TYPE_URL":               13,
}

func (x ObjectType) String() string {
	return proto.EnumName(ObjectType_name, int32(x))
}

func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{0}
}

// Object describes an observable.
type Object struct {
	Type       ObjectType `protobuf:"varint,1,opt,name=type,proto3,enum=platform.v1.ObjectType" json:"type,omitempty"`
	Extensions *types.Any `protobuf:"bytes,2,opt,name=extensions,proto3" json:"extensions,omitempty"`
	// Types that are valid to be assigned to Object:
	//	*Object_Artifact
	//	*Object_As
	//	*Object_Directory
	//	*Object_DomainName
	//	*Object_EmailAddress
	//	*Object_EmailMessage
	//	*Object_File
	//	*Object_Ipv4
	//	*Object_Ipv6
	//	*Object_MacAddress
	//	*Object_Mutex
	//	*Object_Url
	Object               isObject_Object `protobuf_oneof:"object"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Object) Reset()         { *m = Object{} }
func (m *Object) String() string { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()    {}
func (*Object) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{0}
}
func (m *Object) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Object.Unmarshal(m, b)
}
func (m *Object) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Object.Marshal(b, m, deterministic)
}
func (m *Object) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Object.Merge(m, src)
}
func (m *Object) XXX_Size() int {
	return xxx_messageInfo_Object.Size(m)
}
func (m *Object) XXX_DiscardUnknown() {
	xxx_messageInfo_Object.DiscardUnknown(m)
}

var xxx_messageInfo_Object proto.InternalMessageInfo

type isObject_Object interface {
	isObject_Object()
}

type Object_Artifact struct {
	Artifact *Artifact `protobuf:"bytes,3,opt,name=artifact,proto3,oneof"`
}
type Object_As struct {
	As *AutonomousSystem `protobuf:"bytes,4,opt,name=as,proto3,oneof"`
}
type Object_Directory struct {
	Directory *Directory `protobuf:"bytes,5,opt,name=directory,proto3,oneof"`
}
type Object_DomainName struct {
	DomainName *DomainName `protobuf:"bytes,6,opt,name=domain_name,json=domainName,proto3,oneof"`
}
type Object_EmailAddress struct {
	EmailAddress *EmailAddress `protobuf:"bytes,7,opt,name=email_address,json=emailAddress,proto3,oneof"`
}
type Object_EmailMessage struct {
	EmailMessage *EmailMessage `protobuf:"bytes,8,opt,name=email_message,json=emailMessage,proto3,oneof"`
}
type Object_File struct {
	File *File `protobuf:"bytes,9,opt,name=file,proto3,oneof"`
}
type Object_Ipv4 struct {
	Ipv4 *IPv4 `protobuf:"bytes,10,opt,name=ipv4,proto3,oneof"`
}
type Object_Ipv6 struct {
	Ipv6 *IPv6 `protobuf:"bytes,11,opt,name=ipv6,proto3,oneof"`
}
type Object_MacAddress struct {
	MacAddress *MacAddress `protobuf:"bytes,12,opt,name=mac_address,json=macAddress,proto3,oneof"`
}
type Object_Mutex struct {
	Mutex *Mutex `protobuf:"bytes,13,opt,name=mutex,proto3,oneof"`
}
type Object_Url struct {
	Url *URL `protobuf:"bytes,14,opt,name=url,proto3,oneof"`
}

func (*Object_Artifact) isObject_Object()     {}
func (*Object_As) isObject_Object()           {}
func (*Object_Directory) isObject_Object()    {}
func (*Object_DomainName) isObject_Object()   {}
func (*Object_EmailAddress) isObject_Object() {}
func (*Object_EmailMessage) isObject_Object() {}
func (*Object_File) isObject_Object()         {}
func (*Object_Ipv4) isObject_Object()         {}
func (*Object_Ipv6) isObject_Object()         {}
func (*Object_MacAddress) isObject_Object()   {}
func (*Object_Mutex) isObject_Object()        {}
func (*Object_Url) isObject_Object()          {}

func (m *Object) GetObject() isObject_Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Object) GetType() ObjectType {
	if m != nil {
		return m.Type
	}
	return ObjectType_OBJECT_TYPE_INVALID
}

func (m *Object) GetExtensions() *types.Any {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func (m *Object) GetArtifact() *Artifact {
	if x, ok := m.GetObject().(*Object_Artifact); ok {
		return x.Artifact
	}
	return nil
}

func (m *Object) GetAs() *AutonomousSystem {
	if x, ok := m.GetObject().(*Object_As); ok {
		return x.As
	}
	return nil
}

func (m *Object) GetDirectory() *Directory {
	if x, ok := m.GetObject().(*Object_Directory); ok {
		return x.Directory
	}
	return nil
}

func (m *Object) GetDomainName() *DomainName {
	if x, ok := m.GetObject().(*Object_DomainName); ok {
		return x.DomainName
	}
	return nil
}

func (m *Object) GetEmailAddress() *EmailAddress {
	if x, ok := m.GetObject().(*Object_EmailAddress); ok {
		return x.EmailAddress
	}
	return nil
}

func (m *Object) GetEmailMessage() *EmailMessage {
	if x, ok := m.GetObject().(*Object_EmailMessage); ok {
		return x.EmailMessage
	}
	return nil
}

func (m *Object) GetFile() *File {
	if x, ok := m.GetObject().(*Object_File); ok {
		return x.File
	}
	return nil
}

func (m *Object) GetIpv4() *IPv4 {
	if x, ok := m.GetObject().(*Object_Ipv4); ok {
		return x.Ipv4
	}
	return nil
}

func (m *Object) GetIpv6() *IPv6 {
	if x, ok := m.GetObject().(*Object_Ipv6); ok {
		return x.Ipv6
	}
	return nil
}

func (m *Object) GetMacAddress() *MacAddress {
	if x, ok := m.GetObject().(*Object_MacAddress); ok {
		return x.MacAddress
	}
	return nil
}

func (m *Object) GetMutex() *Mutex {
	if x, ok := m.GetObject().(*Object_Mutex); ok {
		return x.Mutex
	}
	return nil
}

func (m *Object) GetUrl() *URL {
	if x, ok := m.GetObject().(*Object_Url); ok {
		return x.Url
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Object) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Object_OneofMarshaler, _Object_OneofUnmarshaler, _Object_OneofSizer, []interface{}{
		(*Object_Artifact)(nil),
		(*Object_As)(nil),
		(*Object_Directory)(nil),
		(*Object_DomainName)(nil),
		(*Object_EmailAddress)(nil),
		(*Object_EmailMessage)(nil),
		(*Object_File)(nil),
		(*Object_Ipv4)(nil),
		(*Object_Ipv6)(nil),
		(*Object_MacAddress)(nil),
		(*Object_Mutex)(nil),
		(*Object_Url)(nil),
	}
}

func _Object_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Object)
	// object
	switch x := m.Object.(type) {
	case *Object_Artifact:
		_ = b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Artifact); err != nil {
			return err
		}
	case *Object_As:
		_ = b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.As); err != nil {
			return err
		}
	case *Object_Directory:
		_ = b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Directory); err != nil {
			return err
		}
	case *Object_DomainName:
		_ = b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DomainName); err != nil {
			return err
		}
	case *Object_EmailAddress:
		_ = b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmailAddress); err != nil {
			return err
		}
	case *Object_EmailMessage:
		_ = b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmailMessage); err != nil {
			return err
		}
	case *Object_File:
		_ = b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.File); err != nil {
			return err
		}
	case *Object_Ipv4:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ipv4); err != nil {
			return err
		}
	case *Object_Ipv6:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ipv6); err != nil {
			return err
		}
	case *Object_MacAddress:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MacAddress); err != nil {
			return err
		}
	case *Object_Mutex:
		_ = b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mutex); err != nil {
			return err
		}
	case *Object_Url:
		_ = b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Url); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Object.Object has unexpected type %T", x)
	}
	return nil
}

func _Object_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Object)
	switch tag {
	case 3: // object.artifact
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Artifact)
		err := b.DecodeMessage(msg)
		m.Object = &Object_Artifact{msg}
		return true, err
	case 4: // object.as
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AutonomousSystem)
		err := b.DecodeMessage(msg)
		m.Object = &Object_As{msg}
		return true, err
	case 5: // object.directory
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Directory)
		err := b.DecodeMessage(msg)
		m.Object = &Object_Directory{msg}
		return true, err
	case 6: // object.domain_name
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DomainName)
		err := b.DecodeMessage(msg)
		m.Object = &Object_DomainName{msg}
		return true, err
	case 7: // object.email_address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EmailAddress)
		err := b.DecodeMessage(msg)
		m.Object = &Object_EmailAddress{msg}
		return true, err
	case 8: // object.email_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EmailMessage)
		err := b.DecodeMessage(msg)
		m.Object = &Object_EmailMessage{msg}
		return true, err
	case 9: // object.file
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(File)
		err := b.DecodeMessage(msg)
		m.Object = &Object_File{msg}
		return true, err
	case 10: // object.ipv4
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IPv4)
		err := b.DecodeMessage(msg)
		m.Object = &Object_Ipv4{msg}
		return true, err
	case 11: // object.ipv6
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IPv6)
		err := b.DecodeMessage(msg)
		m.Object = &Object_Ipv6{msg}
		return true, err
	case 12: // object.mac_address
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MacAddress)
		err := b.DecodeMessage(msg)
		m.Object = &Object_MacAddress{msg}
		return true, err
	case 13: // object.mutex
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Mutex)
		err := b.DecodeMessage(msg)
		m.Object = &Object_Mutex{msg}
		return true, err
	case 14: // object.url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(URL)
		err := b.DecodeMessage(msg)
		m.Object = &Object_Url{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Object_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Object)
	// object
	switch x := m.Object.(type) {
	case *Object_Artifact:
		s := proto.Size(x.Artifact)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_As:
		s := proto.Size(x.As)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_Directory:
		s := proto.Size(x.Directory)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_DomainName:
		s := proto.Size(x.DomainName)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_EmailAddress:
		s := proto.Size(x.EmailAddress)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_EmailMessage:
		s := proto.Size(x.EmailMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_File:
		s := proto.Size(x.File)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_Ipv4:
		s := proto.Size(x.Ipv4)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_Ipv6:
		s := proto.Size(x.Ipv6)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_MacAddress:
		s := proto.Size(x.MacAddress)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_Mutex:
		s := proto.Size(x.Mutex)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Object_Url:
		s := proto.Size(x.Url)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The Artifact Object permits capturing an array of bytes (8-bits), as a
// base64-encoded string, or linking to a file-like payload.
type Artifact struct {
	MimeType             string            `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	PayloadBin           string            `protobuf:"bytes,2,opt,name=payload_bin,json=payloadBin,proto3" json:"payload_bin,omitempty"`
	Url                  string            `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Hashes               map[string]string `protobuf:"bytes,4,rep,name=hashes,proto3" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Artifact) Reset()         { *m = Artifact{} }
func (m *Artifact) String() string { return proto.CompactTextString(m) }
func (*Artifact) ProtoMessage()    {}
func (*Artifact) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{1}
}
func (m *Artifact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artifact.Unmarshal(m, b)
}
func (m *Artifact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artifact.Marshal(b, m, deterministic)
}
func (m *Artifact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artifact.Merge(m, src)
}
func (m *Artifact) XXX_Size() int {
	return xxx_messageInfo_Artifact.Size(m)
}
func (m *Artifact) XXX_DiscardUnknown() {
	xxx_messageInfo_Artifact.DiscardUnknown(m)
}

var xxx_messageInfo_Artifact proto.InternalMessageInfo

func (m *Artifact) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *Artifact) GetPayloadBin() string {
	if m != nil {
		return m.PayloadBin
	}
	return ""
}

func (m *Artifact) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Artifact) GetHashes() map[string]string {
	if m != nil {
		return m.Hashes
	}
	return nil
}

// The AS object represents the properties of an Autonomous System (AS).
type AutonomousSystem struct {
	Number               uint64   `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Rir                  string   `protobuf:"bytes,3,opt,name=rir,proto3" json:"rir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AutonomousSystem) Reset()         { *m = AutonomousSystem{} }
func (m *AutonomousSystem) String() string { return proto.CompactTextString(m) }
func (*AutonomousSystem) ProtoMessage()    {}
func (*AutonomousSystem) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{2}
}
func (m *AutonomousSystem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AutonomousSystem.Unmarshal(m, b)
}
func (m *AutonomousSystem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AutonomousSystem.Marshal(b, m, deterministic)
}
func (m *AutonomousSystem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AutonomousSystem.Merge(m, src)
}
func (m *AutonomousSystem) XXX_Size() int {
	return xxx_messageInfo_AutonomousSystem.Size(m)
}
func (m *AutonomousSystem) XXX_DiscardUnknown() {
	xxx_messageInfo_AutonomousSystem.DiscardUnknown(m)
}

var xxx_messageInfo_AutonomousSystem proto.InternalMessageInfo

func (m *AutonomousSystem) GetNumber() uint64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *AutonomousSystem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AutonomousSystem) GetRir() string {
	if m != nil {
		return m.Rir
	}
	return ""
}

// The Directory Object represents the properties common to a file system
// directory.
type Directory struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	PathEnc              string   `protobuf:"bytes,2,opt,name=path_enc,json=pathEnc,proto3" json:"path_enc,omitempty"`
	Created              uint64   `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Modified             uint64   `protobuf:"varint,4,opt,name=modified,proto3" json:"modified,omitempty"`
	Accessed             uint64   `protobuf:"varint,5,opt,name=accessed,proto3" json:"accessed,omitempty"`
	ContainsRefs         []string `protobuf:"bytes,6,rep,name=contains_refs,json=containsRefs,proto3" json:"contains_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Directory) Reset()         { *m = Directory{} }
func (m *Directory) String() string { return proto.CompactTextString(m) }
func (*Directory) ProtoMessage()    {}
func (*Directory) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{3}
}
func (m *Directory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Directory.Unmarshal(m, b)
}
func (m *Directory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Directory.Marshal(b, m, deterministic)
}
func (m *Directory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Directory.Merge(m, src)
}
func (m *Directory) XXX_Size() int {
	return xxx_messageInfo_Directory.Size(m)
}
func (m *Directory) XXX_DiscardUnknown() {
	xxx_messageInfo_Directory.DiscardUnknown(m)
}

var xxx_messageInfo_Directory proto.InternalMessageInfo

func (m *Directory) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Directory) GetPathEnc() string {
	if m != nil {
		return m.PathEnc
	}
	return ""
}

func (m *Directory) GetCreated() uint64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Directory) GetModified() uint64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *Directory) GetAccessed() uint64 {
	if m != nil {
		return m.Accessed
	}
	return 0
}

func (m *Directory) GetContainsRefs() []string {
	if m != nil {
		return m.ContainsRefs
	}
	return nil
}

// The Domain Name represents the properties of a network domain name.
type DomainName struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ResolvesToRefs       []string `protobuf:"bytes,2,rep,name=resolves_to_refs,json=resolvesToRefs,proto3" json:"resolves_to_refs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainName) Reset()         { *m = DomainName{} }
func (m *DomainName) String() string { return proto.CompactTextString(m) }
func (*DomainName) ProtoMessage()    {}
func (*DomainName) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{4}
}
func (m *DomainName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainName.Unmarshal(m, b)
}
func (m *DomainName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainName.Marshal(b, m, deterministic)
}
func (m *DomainName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainName.Merge(m, src)
}
func (m *DomainName) XXX_Size() int {
	return xxx_messageInfo_DomainName.Size(m)
}
func (m *DomainName) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainName.DiscardUnknown(m)
}

var xxx_messageInfo_DomainName proto.InternalMessageInfo

func (m *DomainName) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *DomainName) GetResolvesToRefs() []string {
	if m != nil {
		return m.ResolvesToRefs
	}
	return nil
}

// The Email Address Object represents a single email address.
type EmailAddress struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	DisplayName          string   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	BelongsToRef         string   `protobuf:"bytes,3,opt,name=belongs_to_ref,json=belongsToRef,proto3" json:"belongs_to_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailAddress) Reset()         { *m = EmailAddress{} }
func (m *EmailAddress) String() string { return proto.CompactTextString(m) }
func (*EmailAddress) ProtoMessage()    {}
func (*EmailAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{5}
}
func (m *EmailAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailAddress.Unmarshal(m, b)
}
func (m *EmailAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailAddress.Marshal(b, m, deterministic)
}
func (m *EmailAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailAddress.Merge(m, src)
}
func (m *EmailAddress) XXX_Size() int {
	return xxx_messageInfo_EmailAddress.Size(m)
}
func (m *EmailAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EmailAddress proto.InternalMessageInfo

func (m *EmailAddress) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *EmailAddress) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *EmailAddress) GetBelongsToRef() string {
	if m != nil {
		return m.BelongsToRef
	}
	return ""
}

// The Email Message Object represents an instance of an email message,
// corresponding to the internet message format described in [RFC5322] and
// related RFCs.
type EmailMessage struct {
	IsMultipart            bool              `protobuf:"varint,1,opt,name=is_multipart,json=isMultipart,proto3" json:"is_multipart,omitempty"`
	Date                   uint64            `protobuf:"varint,2,opt,name=date,proto3" json:"date,omitempty"`
	ContentType            string            `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FromRef                string            `protobuf:"bytes,4,opt,name=from_ref,json=fromRef,proto3" json:"from_ref,omitempty"`
	SenderRef              string            `protobuf:"bytes,5,opt,name=sender_ref,json=senderRef,proto3" json:"sender_ref,omitempty"`
	ToRefs                 []string          `protobuf:"bytes,6,rep,name=to_refs,json=toRefs,proto3" json:"to_refs,omitempty"`
	CcRefs                 []string          `protobuf:"bytes,7,rep,name=cc_refs,json=ccRefs,proto3" json:"cc_refs,omitempty"`
	BccRefs                []string          `protobuf:"bytes,8,rep,name=bcc_refs,json=bccRefs,proto3" json:"bcc_refs,omitempty"`
	Subject                string            `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`
	ReceivedLines          []string          `protobuf:"bytes,10,rep,name=received_lines,json=receivedLines,proto3" json:"received_lines,omitempty"`
	AdditionalHeaderFields map[string]string `protobuf:"bytes,11,rep,name=additional_header_fields,json=additionalHeaderFields,proto3" json:"additional_header_fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                   string            `protobuf:"bytes,12,opt,name=body,proto3" json:"body,omitempty"`
	BodyMultipart          []*EmailMime      `protobuf:"bytes,13,rep,name=body_multipart,json=bodyMultipart,proto3" json:"body_multipart,omitempty"`
	RawEmailRef            string            `protobuf:"bytes,14,opt,name=raw_email_ref,json=rawEmailRef,proto3" json:"raw_email_ref,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}          `json:"-"`
	XXX_unrecognized       []byte            `json:"-"`
	XXX_sizecache          int32             `json:"-"`
}

func (m *EmailMessage) Reset()         { *m = EmailMessage{} }
func (m *EmailMessage) String() string { return proto.CompactTextString(m) }
func (*EmailMessage) ProtoMessage()    {}
func (*EmailMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{6}
}
func (m *EmailMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailMessage.Unmarshal(m, b)
}
func (m *EmailMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailMessage.Marshal(b, m, deterministic)
}
func (m *EmailMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailMessage.Merge(m, src)
}
func (m *EmailMessage) XXX_Size() int {
	return xxx_messageInfo_EmailMessage.Size(m)
}
func (m *EmailMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailMessage.DiscardUnknown(m)
}

var xxx_messageInfo_EmailMessage proto.InternalMessageInfo

func (m *EmailMessage) GetIsMultipart() bool {
	if m != nil {
		return m.IsMultipart
	}
	return false
}

func (m *EmailMessage) GetDate() uint64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *EmailMessage) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *EmailMessage) GetFromRef() string {
	if m != nil {
		return m.FromRef
	}
	return ""
}

func (m *EmailMessage) GetSenderRef() string {
	if m != nil {
		return m.SenderRef
	}
	return ""
}

func (m *EmailMessage) GetToRefs() []string {
	if m != nil {
		return m.ToRefs
	}
	return nil
}

func (m *EmailMessage) GetCcRefs() []string {
	if m != nil {
		return m.CcRefs
	}
	return nil
}

func (m *EmailMessage) GetBccRefs() []string {
	if m != nil {
		return m.BccRefs
	}
	return nil
}

func (m *EmailMessage) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailMessage) GetReceivedLines() []string {
	if m != nil {
		return m.ReceivedLines
	}
	return nil
}

func (m *EmailMessage) GetAdditionalHeaderFields() map[string]string {
	if m != nil {
		return m.AdditionalHeaderFields
	}
	return nil
}

func (m *EmailMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *EmailMessage) GetBodyMultipart() []*EmailMime {
	if m != nil {
		return m.BodyMultipart
	}
	return nil
}

func (m *EmailMessage) GetRawEmailRef() string {
	if m != nil {
		return m.RawEmailRef
	}
	return ""
}

// The File Object represents the properties of a file.
type File struct {
	Hashes               map[string]string `protobuf:"bytes,1,rep,name=hashes,proto3" json:"hashes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Size_                uint64            `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Name                 string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	NameEnc              string            `protobuf:"bytes,4,opt,name=name_enc,json=nameEnc,proto3" json:"name_enc,omitempty"`
	MagicNumberHex       string            `protobuf:"bytes,5,opt,name=magic_number_hex,json=magicNumberHex,proto3" json:"magic_number_hex,omitempty"`
	MimeType             string            `protobuf:"bytes,6,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Created              uint64            `protobuf:"varint,7,opt,name=created,proto3" json:"created,omitempty"`
	Modified             uint64            `protobuf:"varint,8,opt,name=modified,proto3" json:"modified,omitempty"`
	Accessed             uint64            `protobuf:"varint,9,opt,name=accessed,proto3" json:"accessed,omitempty"`
	ParentDirectoryRef   string            `protobuf:"bytes,10,opt,name=parent_directory_ref,json=parentDirectoryRef,proto3" json:"parent_directory_ref,omitempty"`
	IsEncrypted          bool              `protobuf:"varint,11,opt,name=is_encrypted,json=isEncrypted,proto3" json:"is_encrypted,omitempty"`
	EncryptionAlgorithm  string            `protobuf:"bytes,12,opt,name=encryption_algorithm,json=encryptionAlgorithm,proto3" json:"encryption_algorithm,omitempty"`
	DecryptionKey        string            `protobuf:"bytes,13,opt,name=decryption_key,json=decryptionKey,proto3" json:"decryption_key,omitempty"`
	ContainsRefs         []string          `protobuf:"bytes,14,rep,name=contains_refs,json=containsRefs,proto3" json:"contains_refs,omitempty"`
	ContentRef           string            `protobuf:"bytes,15,opt,name=content_ref,json=contentRef,proto3" json:"content_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{7}
}
func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetHashes() map[string]string {
	if m != nil {
		return m.Hashes
	}
	return nil
}

func (m *File) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetNameEnc() string {
	if m != nil {
		return m.NameEnc
	}
	return ""
}

func (m *File) GetMagicNumberHex() string {
	if m != nil {
		return m.MagicNumberHex
	}
	return ""
}

func (m *File) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *File) GetCreated() uint64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *File) GetModified() uint64 {
	if m != nil {
		return m.Modified
	}
	return 0
}

func (m *File) GetAccessed() uint64 {
	if m != nil {
		return m.Accessed
	}
	return 0
}

func (m *File) GetParentDirectoryRef() string {
	if m != nil {
		return m.ParentDirectoryRef
	}
	return ""
}

func (m *File) GetIsEncrypted() bool {
	if m != nil {
		return m.IsEncrypted
	}
	return false
}

func (m *File) GetEncryptionAlgorithm() string {
	if m != nil {
		return m.EncryptionAlgorithm
	}
	return ""
}

func (m *File) GetDecryptionKey() string {
	if m != nil {
		return m.DecryptionKey
	}
	return ""
}

func (m *File) GetContainsRefs() []string {
	if m != nil {
		return m.ContainsRefs
	}
	return nil
}

func (m *File) GetContentRef() string {
	if m != nil {
		return m.ContentRef
	}
	return ""
}

// The IPv4 Address Object represents one or more IPv4 addresses expressed
// using CIDR notation.
type IPv4 struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ResolvesToRefs       []string `protobuf:"bytes,2,rep,name=resolves_to_refs,json=resolvesToRefs,proto3" json:"resolves_to_refs,omitempty"`
	BelongsToRef         string   `protobuf:"bytes,3,opt,name=belongs_to_ref,json=belongsToRef,proto3" json:"belongs_to_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPv4) Reset()         { *m = IPv4{} }
func (m *IPv4) String() string { return proto.CompactTextString(m) }
func (*IPv4) ProtoMessage()    {}
func (*IPv4) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{8}
}
func (m *IPv4) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPv4.Unmarshal(m, b)
}
func (m *IPv4) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPv4.Marshal(b, m, deterministic)
}
func (m *IPv4) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPv4.Merge(m, src)
}
func (m *IPv4) XXX_Size() int {
	return xxx_messageInfo_IPv4.Size(m)
}
func (m *IPv4) XXX_DiscardUnknown() {
	xxx_messageInfo_IPv4.DiscardUnknown(m)
}

var xxx_messageInfo_IPv4 proto.InternalMessageInfo

func (m *IPv4) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *IPv4) GetResolvesToRefs() []string {
	if m != nil {
		return m.ResolvesToRefs
	}
	return nil
}

func (m *IPv4) GetBelongsToRef() string {
	if m != nil {
		return m.BelongsToRef
	}
	return ""
}

// The IPv6 Address Object represents one or more IPv6 addresses expressed using
// CIDR notation.
type IPv6 struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ResolvesToRefs       []string `protobuf:"bytes,2,rep,name=resolves_to_refs,json=resolvesToRefs,proto3" json:"resolves_to_refs,omitempty"`
	BelongsToRef         string   `protobuf:"bytes,3,opt,name=belongs_to_ref,json=belongsToRef,proto3" json:"belongs_to_ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPv6) Reset()         { *m = IPv6{} }
func (m *IPv6) String() string { return proto.CompactTextString(m) }
func (*IPv6) ProtoMessage()    {}
func (*IPv6) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{9}
}
func (m *IPv6) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPv6.Unmarshal(m, b)
}
func (m *IPv6) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPv6.Marshal(b, m, deterministic)
}
func (m *IPv6) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPv6.Merge(m, src)
}
func (m *IPv6) XXX_Size() int {
	return xxx_messageInfo_IPv6.Size(m)
}
func (m *IPv6) XXX_DiscardUnknown() {
	xxx_messageInfo_IPv6.DiscardUnknown(m)
}

var xxx_messageInfo_IPv6 proto.InternalMessageInfo

func (m *IPv6) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *IPv6) GetResolvesToRefs() []string {
	if m != nil {
		return m.ResolvesToRefs
	}
	return nil
}

func (m *IPv6) GetBelongsToRef() string {
	if m != nil {
		return m.BelongsToRef
	}
	return ""
}

// The MAC Address Object represents a single Media Access Control (MAC) address.
type MacAddress struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacAddress) Reset()         { *m = MacAddress{} }
func (m *MacAddress) String() string { return proto.CompactTextString(m) }
func (*MacAddress) ProtoMessage()    {}
func (*MacAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{10}
}
func (m *MacAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacAddress.Unmarshal(m, b)
}
func (m *MacAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacAddress.Marshal(b, m, deterministic)
}
func (m *MacAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacAddress.Merge(m, src)
}
func (m *MacAddress) XXX_Size() int {
	return xxx_messageInfo_MacAddress.Size(m)
}
func (m *MacAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MacAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MacAddress proto.InternalMessageInfo

func (m *MacAddress) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The Mutex Object represents the properties of a mutual exclusion (mutex) object.
type Mutex struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mutex) Reset()         { *m = Mutex{} }
func (m *Mutex) String() string { return proto.CompactTextString(m) }
func (*Mutex) ProtoMessage()    {}
func (*Mutex) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{11}
}
func (m *Mutex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mutex.Unmarshal(m, b)
}
func (m *Mutex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mutex.Marshal(b, m, deterministic)
}
func (m *Mutex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mutex.Merge(m, src)
}
func (m *Mutex) XXX_Size() int {
	return xxx_messageInfo_Mutex.Size(m)
}
func (m *Mutex) XXX_DiscardUnknown() {
	xxx_messageInfo_Mutex.DiscardUnknown(m)
}

var xxx_messageInfo_Mutex proto.InternalMessageInfo

func (m *Mutex) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The URL Object represents the properties of a uniform resource locator (URL).
type URL struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URL) Reset()         { *m = URL{} }
func (m *URL) String() string { return proto.CompactTextString(m) }
func (*URL) ProtoMessage()    {}
func (*URL) Descriptor() ([]byte, []int) {
	return fileDescriptor_c756a0aac3451252, []int{12}
}
func (m *URL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URL.Unmarshal(m, b)
}
func (m *URL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URL.Marshal(b, m, deterministic)
}
func (m *URL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URL.Merge(m, src)
}
func (m *URL) XXX_Size() int {
	return xxx_messageInfo_URL.Size(m)
}
func (m *URL) XXX_DiscardUnknown() {
	xxx_messageInfo_URL.DiscardUnknown(m)
}

var xxx_messageInfo_URL proto.InternalMessageInfo

func (m *URL) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("platform.v1.ObjectType", ObjectType_name, ObjectType_value)
	proto.RegisterType((*Object)(nil), "platform.v1.Object")
	proto.RegisterType((*Artifact)(nil), "platform.v1.Artifact")
	proto.RegisterMapType((map[string]string)(nil), "platform.v1.Artifact.HashesEntry")
	proto.RegisterType((*AutonomousSystem)(nil), "platform.v1.AutonomousSystem")
	proto.RegisterType((*Directory)(nil), "platform.v1.Directory")
	proto.RegisterType((*DomainName)(nil), "platform.v1.DomainName")
	proto.RegisterType((*EmailAddress)(nil), "platform.v1.EmailAddress")
	proto.RegisterType((*EmailMessage)(nil), "platform.v1.EmailMessage")
	proto.RegisterMapType((map[string]string)(nil), "platform.v1.EmailMessage.AdditionalHeaderFieldsEntry")
	proto.RegisterType((*File)(nil), "platform.v1.File")
	proto.RegisterMapType((map[string]string)(nil), "platform.v1.File.HashesEntry")
	proto.RegisterType((*IPv4)(nil), "platform.v1.IPv4")
	proto.RegisterType((*IPv6)(nil), "platform.v1.IPv6")
	proto.RegisterType((*MacAddress)(nil), "platform.v1.MacAddress")
	proto.RegisterType((*Mutex)(nil), "platform.v1.Mutex")
	proto.RegisterType((*URL)(nil), "platform.v1.URL")
}

func init() { proto.RegisterFile("platform/v1/object.proto", fileDescriptor_c756a0aac3451252) }

var fileDescriptor_c756a0aac3451252 = []byte{
	// 1478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0xd6, 0xc9, 0x3a, 0x8c, 0x0e, 0x61, 0x36, 0x8e, 0x4d, 0xd9, 0x30, 0xfe, 0x58, 0x7f, 0x8a,
	0x1a, 0x29, 0x20, 0xd7, 0x89, 0x63, 0x34, 0x01, 0x0a, 0x54, 0xb6, 0xe9, 0x4a, 0x8d, 0x4e, 0x58,
	0xc9, 0x6e, 0x52, 0x14, 0x20, 0x56, 0xe4, 0x4a, 0xde, 0x96, 0x07, 0x81, 0xa4, 0x14, 0x2b, 0x8f,
	0xd3, 0xcb, 0xde, 0xf5, 0x31, 0xda, 0xab, 0x3e, 0x40, 0xef, 0xfa, 0x1a, 0xbd, 0x28, 0x76, 0x79,
	0x10, 0xe5, 0xc8, 0x41, 0x8b, 0x00, 0xbd, 0xd2, 0xee, 0x7c, 0xdf, 0xcc, 0x2c, 0x67, 0x67, 0x3e,
	0x52, 0x20, 0x4f, 0x0d, 0xe2, 0x8d, 0x6d, 0xc7, 0x3c, 0x9c, 0x1f, 0x1d, 0xda, 0xa3, 0x1f, 0xa8,
	0xe6, 0xd5, 0xa7, 0x8e, 0xed, 0xd9, 0xa8, 0x18, 0x22, 0xf5, 0xf9, 0xd1, 0x4e, 0x75, 0x62, 0xdb,
	0x13, 0x83, 0x1e, 0x0a, 0x68, 0x34, 0x1b, 0x1f, 0x12, 0x6b, 0xe1, 0xf3, 0x76, 0x76, 0xe3, 0x11,
	0x34, 0xdb, 0x9c, 0xda, 0x16, 0xb5, 0x82, 0x20, 0xb5, 0x3f, 0x36, 0x20, 0xdb, 0x13, 0x51, 0xd1,
	0x67, 0x90, 0xf1, 0x16, 0x53, 0x2a, 0x27, 0x1f, 0x25, 0x0f, 0x2a, 0x4f, 0xb7, 0xeb, 0xb1, 0xf0,
	0x75, 0x9f, 0x32, 0x5c, 0x4c, 0x29, 0x16, 0x24, 0x74, 0x0c, 0x40, 0x6f, 0x3c, 0x6a, 0xb9, 0xcc,
	0xb6, 0x5c, 0x39, 0xf5, 0x28, 0x79, 0x50, 0x7c, 0xba, 0x59, 0xf7, 0x0f, 0x51, 0x0f, 0x0f, 0x51,
	0x6f, 0x58, 0x0b, 0x1c, 0xe3, 0xa1, 0x67, 0x90, 0x27, 0x8e, 0xc7, 0xc6, 0x44, 0xf3, 0xe4, 0xb4,
	0xf0, 0x79, 0xb8, 0x92, 0xa6, 0x11, 0x80, 0xcd, 0x04, 0x8e, 0x88, 0xe8, 0x10, 0x52, 0xc4, 0x95,
	0x33, 0x82, 0xbe, 0xb7, 0x4a, 0x9f, 0x79, 0xb6, 0x65, 0x9b, 0xf6, 0xcc, 0x1d, 0x2c, 0x5c, 0x8f,
	0x9a, 0xcd, 0x04, 0x4e, 0x11, 0x17, 0x9d, 0x40, 0x41, 0x67, 0x0e, 0xd5, 0x3c, 0xdb, 0x59, 0xc8,
	0x1b, 0xc2, 0x6f, 0x6b, 0xc5, 0xef, 0x3c, 0x44, 0x9b, 0x09, 0xbc, 0xa4, 0xa2, 0x97, 0x50, 0xd4,
	0x6d, 0x93, 0x30, 0x4b, 0xb5, 0x88, 0x49, 0xe5, 0xac, 0xf0, 0x5c, 0xad, 0xc3, 0xb9, 0xc0, 0xbb,
	0xc4, 0xa4, 0xcd, 0x04, 0x06, 0x3d, 0xda, 0xa1, 0xaf, 0xa0, 0x4c, 0x4d, 0xc2, 0x0c, 0x95, 0xe8,
	0xba, 0x43, 0x5d, 0x57, 0xce, 0x09, 0xef, 0xea, 0x8a, 0xb7, 0xc2, 0x19, 0x0d, 0x9f, 0xd0, 0x4c,
	0xe0, 0x12, 0x8d, 0xed, 0x97, 0x11, 0x4c, 0xea, 0xba, 0x64, 0x42, 0xe5, 0xfc, 0x5d, 0x11, 0x3a,
	0x3e, 0x21, 0x8a, 0x10, 0xec, 0xd1, 0xa7, 0x90, 0x19, 0x33, 0x83, 0xca, 0x05, 0xe1, 0x78, 0x7f,
	0xc5, 0xf1, 0x82, 0x19, 0xdc, 0x41, 0x10, 0x38, 0x91, 0x4d, 0xe7, 0xc7, 0x32, 0xac, 0x21, 0xb6,
	0xfa, 0xf3, 0x63, 0x4e, 0xe4, 0x84, 0x80, 0x78, 0x22, 0x17, 0xd7, 0x13, 0x4f, 0x02, 0xe2, 0x09,
	0x2f, 0x9d, 0x49, 0xb4, 0xe8, 0xe1, 0x4b, 0x6b, 0x4a, 0xd7, 0x21, 0xda, 0xf2, 0xd1, 0xc1, 0x8c,
	0x76, 0xe8, 0x09, 0x6c, 0x98, 0x33, 0x8f, 0xde, 0xc8, 0x65, 0xe1, 0x85, 0x56, 0xbd, 0x38, 0xd2,
	0x4c, 0x60, 0x9f, 0x82, 0x1e, 0x43, 0x7a, 0xe6, 0x18, 0x72, 0x45, 0x30, 0xa5, 0x15, 0xe6, 0x25,
	0x6e, 0x37, 0x13, 0x98, 0xc3, 0xa7, 0x79, 0xc8, 0xfa, 0x93, 0x52, 0xfb, 0x3d, 0x09, 0xf9, 0xb0,
	0xa9, 0xd0, 0x2e, 0x14, 0x4c, 0x66, 0x52, 0x35, 0xea, 0xf2, 0x02, 0xce, 0x73, 0x03, 0x6f, 0x6b,
	0xf4, 0x3f, 0x28, 0x4e, 0xc9, 0xc2, 0xb0, 0x89, 0xae, 0x8e, 0x98, 0x25, 0x3a, 0xba, 0x80, 0x21,
	0x30, 0x9d, 0x32, 0x0b, 0x49, 0x7e, 0xea, 0xb4, 0x00, 0xf8, 0x12, 0xbd, 0x80, 0xec, 0x35, 0x71,
	0xaf, 0x29, 0x6f, 0xce, 0xf4, 0x41, 0xf1, 0xe9, 0xfe, 0xda, 0x5e, 0xae, 0x37, 0x05, 0x47, 0xb1,
	0x3c, 0x67, 0x81, 0x03, 0x87, 0x9d, 0x17, 0x50, 0x8c, 0x99, 0x79, 0xec, 0x1f, 0xe9, 0x22, 0x38,
	0x13, 0x5f, 0xa2, 0x4d, 0xd8, 0x98, 0x13, 0x63, 0x46, 0x83, 0x83, 0xf8, 0x9b, 0x97, 0xa9, 0x2f,
	0x92, 0xb5, 0x3e, 0x48, 0xb7, 0xfb, 0x1e, 0x6d, 0x41, 0xd6, 0x9a, 0x99, 0x23, 0xea, 0x88, 0x10,
	0x19, 0x1c, 0xec, 0x10, 0x82, 0x8c, 0x68, 0x65, 0x3f, 0x88, 0x58, 0xf3, 0x5c, 0x0e, 0x73, 0xc2,
	0xe7, 0x70, 0x98, 0x53, 0xfb, 0x25, 0x09, 0x85, 0x68, 0x24, 0xb8, 0xcf, 0x94, 0x78, 0xd7, 0xc1,
	0x61, 0xc4, 0x1a, 0x55, 0x21, 0xcf, 0x7f, 0x55, 0x6a, 0x69, 0x41, 0xac, 0x1c, 0xdf, 0x2b, 0x96,
	0x86, 0x64, 0xc8, 0x69, 0x0e, 0x25, 0x1e, 0xd5, 0x45, 0xc8, 0x0c, 0x0e, 0xb7, 0x68, 0x07, 0xf2,
	0xa6, 0xad, 0xb3, 0x31, 0xa3, 0xba, 0x98, 0xde, 0x0c, 0x8e, 0xf6, 0x1c, 0x23, 0x9a, 0x46, 0x5d,
	0x97, 0xea, 0x62, 0x42, 0x33, 0x38, 0xda, 0xa3, 0xff, 0x43, 0x59, 0xb3, 0x2d, 0x8f, 0x30, 0xcb,
	0x55, 0x1d, 0x3a, 0x76, 0xe5, 0xec, 0xa3, 0xf4, 0x41, 0x01, 0x97, 0x42, 0x23, 0xa6, 0x63, 0xb7,
	0xd6, 0x06, 0x58, 0xce, 0xe2, 0xb2, 0x5a, 0xc9, 0x58, 0xb5, 0xd0, 0x01, 0x48, 0x0e, 0x75, 0x6d,
	0x63, 0x4e, 0x5d, 0xd5, 0xb3, 0xfd, 0x58, 0x29, 0x11, 0xab, 0x12, 0xda, 0x87, 0xb6, 0x88, 0x66,
	0x42, 0x29, 0x3e, 0x9b, 0x77, 0xc4, 0xdb, 0x87, 0x92, 0xce, 0xdc, 0xa9, 0x41, 0x16, 0x6a, 0xac,
	0xaa, 0xc5, 0xc0, 0x26, 0x0e, 0xf2, 0x18, 0x2a, 0x23, 0x6a, 0xd8, 0xd6, 0x24, 0xcc, 0x18, 0xd4,
	0xb9, 0x14, 0x58, 0x45, 0xbe, 0xda, 0x9f, 0x99, 0x20, 0x5f, 0x38, 0xb9, 0xfb, 0x50, 0x62, 0xae,
	0x6a, 0xce, 0x0c, 0x8f, 0x4d, 0x89, 0xe3, 0x89, 0xb4, 0x79, 0x5c, 0x64, 0x6e, 0x27, 0x34, 0xf1,
	0x6b, 0xd1, 0x89, 0xe7, 0x27, 0xcd, 0x60, 0xb1, 0xe6, 0x6e, 0xbc, 0x28, 0xd4, 0xf2, 0xfc, 0x9e,
	0xf6, 0x73, 0x15, 0x03, 0x9b, 0x68, 0xeb, 0x2a, 0xe4, 0xc7, 0x8e, 0x6d, 0x8a, 0xa3, 0x64, 0xfc,
	0x9b, 0xe3, 0x7b, 0x4c, 0xc7, 0x68, 0x0f, 0xc0, 0xa5, 0x96, 0x4e, 0x1d, 0x01, 0x6e, 0x08, 0xb0,
	0xe0, 0x5b, 0x38, 0xbc, 0x0d, 0xb9, 0xb0, 0x68, 0xfe, 0x05, 0x64, 0x3d, 0x51, 0x2c, 0x0e, 0x68,
	0x9a, 0x0f, 0xe4, 0x7c, 0x40, 0xd3, 0x04, 0x50, 0x85, 0xfc, 0x28, 0x44, 0xf2, 0x02, 0xc9, 0x8d,
	0x02, 0x48, 0x86, 0x9c, 0x3b, 0x13, 0x23, 0x29, 0xd4, 0xa9, 0x80, 0xc3, 0x2d, 0xfa, 0x04, 0x2a,
	0x0e, 0xd5, 0x28, 0x9b, 0x53, 0x5d, 0x35, 0x98, 0x45, 0x5d, 0x19, 0x84, 0x6b, 0x39, 0xb4, 0xb6,
	0xb9, 0x11, 0xd9, 0x20, 0x13, 0x5d, 0x67, 0x1e, 0xb3, 0x2d, 0x62, 0xa8, 0xd7, 0x94, 0xf0, 0x73,
	0x8f, 0x19, 0x35, 0x74, 0x57, 0x2e, 0x8a, 0xe9, 0x7b, 0x7e, 0xa7, 0x50, 0xd6, 0x1b, 0x91, 0x67,
	0x53, 0x38, 0x5e, 0x08, 0x3f, 0x7f, 0x22, 0xb7, 0xc8, 0x5a, 0x90, 0xd7, 0x7b, 0x64, 0xeb, 0x0b,
	0x21, 0x65, 0x05, 0x2c, 0xd6, 0xe8, 0x4b, 0xa8, 0xf0, 0xdf, 0xd8, 0x45, 0x95, 0x45, 0xea, 0xad,
	0x35, 0xa9, 0x99, 0x49, 0x71, 0x99, 0xb3, 0x97, 0x57, 0x58, 0x83, 0xb2, 0x43, 0xde, 0xaa, 0xbe,
	0xca, 0xf3, 0x9a, 0x57, 0xfc, 0xfb, 0x72, 0xc8, 0x5b, 0xe1, 0x83, 0xe9, 0x78, 0xa7, 0x05, 0xbb,
	0x1f, 0x38, 0xed, 0xbf, 0x12, 0x8a, 0x5f, 0x33, 0x90, 0xe1, 0xb2, 0x8f, 0x9e, 0x47, 0x3a, 0x95,
	0x14, 0xc7, 0xdd, 0x7b, 0xef, 0xcd, 0xb0, 0x4e, 0xa3, 0x78, 0x05, 0x5c, 0xf6, 0x2e, 0xea, 0x38,
	0xbe, 0x8e, 0x04, 0x25, 0x1d, 0x13, 0x94, 0x2a, 0xe4, 0xf9, 0xaf, 0x10, 0x87, 0xa0, 0xc5, 0xf8,
	0x9e, 0x8b, 0xc3, 0x01, 0x48, 0x26, 0x99, 0x30, 0x4d, 0xf5, 0xf5, 0x48, 0xbd, 0xa6, 0x37, 0x41,
	0xa3, 0x55, 0x84, 0xbd, 0x2b, 0xcc, 0x4d, 0x7a, 0xb3, 0xaa, 0xcd, 0xd9, 0x5b, 0xda, 0x1c, 0xd3,
	0x98, 0xdc, 0xdd, 0x1a, 0x93, 0xff, 0x80, 0xc6, 0x14, 0x6e, 0x69, 0xcc, 0xe7, 0xb0, 0x39, 0x25,
	0x0e, 0x1f, 0x9c, 0xe8, 0xf5, 0x2f, 0x6e, 0x04, 0x44, 0x66, 0xe4, 0x63, 0x91, 0x26, 0xf2, 0x71,
	0xf0, 0x47, 0x94, 0x5a, 0x9a, 0xb3, 0x98, 0xf2, 0x83, 0x14, 0xc3, 0x11, 0x55, 0x42, 0x13, 0x3a,
	0x82, 0xcd, 0x00, 0x67, 0xb6, 0xa5, 0x12, 0x63, 0x62, 0x3b, 0xcc, 0xbb, 0x36, 0x83, 0x16, 0x7a,
	0xb0, 0xc4, 0x1a, 0x21, 0xc4, 0xbb, 0x5f, 0xa7, 0x91, 0x0b, 0xbf, 0xda, 0xb2, 0x20, 0x97, 0x97,
	0xd6, 0x57, 0x74, 0xf1, 0xbe, 0x24, 0x56, 0xde, 0x97, 0x44, 0xfe, 0x06, 0x0b, 0xd5, 0x80, 0x3f,
	0xca, 0x3d, 0xff, 0x0d, 0x16, 0x98, 0x78, 0x6f, 0x7d, 0xc4, 0x4b, 0xc7, 0x80, 0x0c, 0xff, 0x30,
	0xf8, 0x58, 0xa1, 0xfd, 0x87, 0xfa, 0xe8, 0x67, 0x3b, 0xf9, 0x8f, 0xb2, 0xd5, 0x00, 0x96, 0xdf,
	0x26, 0xeb, 0x73, 0xd6, 0x76, 0x61, 0x43, 0x7c, 0x89, 0x44, 0x03, 0x90, 0x5c, 0x0e, 0x40, 0x6d,
	0x17, 0xd2, 0x97, 0xb8, 0xbd, 0xde, 0xf3, 0xc9, 0x5f, 0x29, 0x80, 0xe5, 0xd7, 0x33, 0xda, 0x86,
	0x07, 0xbd, 0xd3, 0x6f, 0x94, 0xb3, 0xa1, 0x3a, 0x7c, 0xd3, 0x57, 0xd4, 0x56, 0xf7, 0xaa, 0xd1,
	0x6e, 0x9d, 0x4b, 0x89, 0xdb, 0xc0, 0x65, 0xf7, 0x55, 0xb7, 0xf7, 0x6d, 0x57, 0x4a, 0x22, 0x19,
	0x36, 0xe3, 0x40, 0x03, 0x0f, 0x5b, 0x17, 0x8d, 0xb3, 0xa1, 0x94, 0x42, 0xfb, 0xb0, 0xb7, 0x82,
	0x5c, 0x0e, 0x7b, 0xdd, 0x5e, 0xa7, 0x77, 0x39, 0x50, 0x07, 0x6f, 0x06, 0x43, 0xa5, 0x23, 0xa5,
	0x51, 0x15, 0x1e, 0xc6, 0x29, 0xe7, 0x2d, 0xac, 0x9c, 0x0d, 0x7b, 0xf8, 0x8d, 0x94, 0x41, 0xbb,
	0xb0, 0xbd, 0x02, 0xf5, 0x3a, 0x8d, 0x56, 0x57, 0xed, 0x36, 0x3a, 0x8a, 0xb4, 0x81, 0xf6, 0xa0,
	0x1a, 0x07, 0x95, 0x4e, 0xa3, 0xd5, 0x56, 0x1b, 0xe7, 0xe7, 0x58, 0x19, 0x0c, 0xa4, 0xec, 0x7a,
	0xb8, 0xa3, 0x0c, 0x06, 0x8d, 0xaf, 0x15, 0x29, 0x87, 0x36, 0x41, 0x8a, 0xc3, 0x17, 0xad, 0xb6,
	0x22, 0xe5, 0x6f, 0x5b, 0x5b, 0xfd, 0xab, 0x63, 0xa9, 0xb0, 0xc6, 0x7a, 0x22, 0xc1, 0xed, 0xc3,
	0x75, 0x1a, 0x67, 0x51, 0xf6, 0x22, 0x7a, 0x08, 0xf7, 0x57, 0xc0, 0xcb, 0xa1, 0xf2, 0x5a, 0x2a,
	0xa1, 0x07, 0x70, 0x6f, 0xa5, 0x82, 0xb8, 0x2d, 0x95, 0x4f, 0x27, 0x70, 0x60, 0x3b, 0x93, 0xfa,
	0x3b, 0x6a, 0x31, 0xef, 0x9a, 0x38, 0x75, 0x66, 0x6b, 0x91, 0xf8, 0x91, 0x29, 0x8b, 0x2b, 0xe1,
	0x69, 0xd1, 0xbf, 0xa7, 0x3e, 0xff, 0xf7, 0xd2, 0x4f, 0x7e, 0x07, 0x21, 0x36, 0x3f, 0xfa, 0x29,
	0x95, 0xee, 0xbf, 0x7e, 0xfd, 0x73, 0xaa, 0xd8, 0x0f, 0xe9, 0x57, 0x47, 0xbf, 0x2d, 0x77, 0xdf,
	0x5f, 0x1d, 0x8d, 0xb2, 0xe2, 0x4f, 0xcf, 0xb3, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x41, 0x6e,
	0x17, 0xec, 0xb0, 0x0d, 0x00, 0x00,
}
