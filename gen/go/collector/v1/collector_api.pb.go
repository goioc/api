// Code generated by protoc-gen-go. DO NOT EDIT.
// source: collector/v1/collector_api.proto

package collectorv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/iocplatform/gen/go/platform/v1"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SessionRequest struct {
	Url                  string      `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Confidence           uint64      `protobuf:"varint,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	ContentHash          string      `protobuf:"bytes,3,opt,name=content_hash,json=contentHash,proto3" json:"content_hash,omitempty"`
	Tlp                  v1.TLPLevel `protobuf:"varint,4,opt,name=tlp,proto3,enum=platform.v1.TLPLevel" json:"tlp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SessionRequest) Reset()         { *m = SessionRequest{} }
func (m *SessionRequest) String() string { return proto.CompactTextString(m) }
func (*SessionRequest) ProtoMessage()    {}
func (*SessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa75ad5a5d0d15, []int{0}
}

func (m *SessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionRequest.Unmarshal(m, b)
}
func (m *SessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionRequest.Marshal(b, m, deterministic)
}
func (m *SessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionRequest.Merge(m, src)
}
func (m *SessionRequest) XXX_Size() int {
	return xxx_messageInfo_SessionRequest.Size(m)
}
func (m *SessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SessionRequest proto.InternalMessageInfo

func (m *SessionRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SessionRequest) GetConfidence() uint64 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *SessionRequest) GetContentHash() string {
	if m != nil {
		return m.ContentHash
	}
	return ""
}

func (m *SessionRequest) GetTlp() v1.TLPLevel {
	if m != nil {
		return m.Tlp
	}
	return v1.TLPLevel_TLP_LEVEL_INVALID
}

type SessionResponse struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionResponse) Reset()         { *m = SessionResponse{} }
func (m *SessionResponse) String() string { return proto.CompactTextString(m) }
func (*SessionResponse) ProtoMessage()    {}
func (*SessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa75ad5a5d0d15, []int{1}
}

func (m *SessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionResponse.Unmarshal(m, b)
}
func (m *SessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionResponse.Marshal(b, m, deterministic)
}
func (m *SessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionResponse.Merge(m, src)
}
func (m *SessionResponse) XXX_Size() int {
	return xxx_messageInfo_SessionResponse.Size(m)
}
func (m *SessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SessionResponse proto.InternalMessageInfo

func (m *SessionResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type PushRequest struct {
	SessionId            string     `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Object               *v1.Object `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa75ad5a5d0d15, []int{2}
}

func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (m *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(m, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *PushRequest) GetObject() *v1.Object {
	if m != nil {
		return m.Object
	}
	return nil
}

type PushResponse struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ObjectCount          uint64   `protobuf:"varint,2,opt,name=object_count,json=objectCount,proto3" json:"object_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushResponse) Reset()         { *m = PushResponse{} }
func (m *PushResponse) String() string { return proto.CompactTextString(m) }
func (*PushResponse) ProtoMessage()    {}
func (*PushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bfa75ad5a5d0d15, []int{3}
}

func (m *PushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushResponse.Unmarshal(m, b)
}
func (m *PushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushResponse.Marshal(b, m, deterministic)
}
func (m *PushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushResponse.Merge(m, src)
}
func (m *PushResponse) XXX_Size() int {
	return xxx_messageInfo_PushResponse.Size(m)
}
func (m *PushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushResponse proto.InternalMessageInfo

func (m *PushResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *PushResponse) GetObjectCount() uint64 {
	if m != nil {
		return m.ObjectCount
	}
	return 0
}

func init() {
	proto.RegisterType((*SessionRequest)(nil), "collector.v1.SessionRequest")
	proto.RegisterType((*SessionResponse)(nil), "collector.v1.SessionResponse")
	proto.RegisterType((*PushRequest)(nil), "collector.v1.PushRequest")
	proto.RegisterType((*PushResponse)(nil), "collector.v1.PushResponse")
}

func init() { proto.RegisterFile("collector/v1/collector_api.proto", fileDescriptor_8bfa75ad5a5d0d15) }

var fileDescriptor_8bfa75ad5a5d0d15 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0x99, 0xa6, 0xac, 0xec, 0x49, 0x58, 0x75, 0x44, 0x88, 0xc1, 0x95, 0x98, 0x1b, 0x23,
	0xc2, 0xac, 0xa9, 0x0f, 0x20, 0x6e, 0x41, 0x2c, 0x14, 0x0c, 0x51, 0x4a, 0x15, 0x21, 0xa4, 0xd3,
	0xa9, 0x19, 0x89, 0x33, 0x69, 0x66, 0x92, 0x0b, 0x1f, 0xc2, 0x5b, 0xef, 0xbd, 0xf4, 0x51, 0x7c,
	0x2a, 0x49, 0x26, 0x4d, 0x53, 0x50, 0xd9, 0xbb, 0xcc, 0x7f, 0xfe, 0x13, 0xbe, 0xf3, 0x9f, 0x03,
	0x3e, 0x95, 0x45, 0xc1, 0xa8, 0x96, 0xd5, 0x55, 0x13, 0x5d, 0x0d, 0x8f, 0x34, 0x2b, 0x39, 0x29,
	0x2b, 0xa9, 0x25, 0x76, 0x06, 0x91, 0x34, 0x91, 0xe7, 0x97, 0x45, 0xa6, 0x77, 0xb2, 0xfa, 0xda,
	0xd9, 0x8b, 0x4c, 0x29, 0xbe, 0xe3, 0x34, 0xd3, 0x5c, 0x0a, 0xe3, 0xf7, 0xdc, 0xb1, 0x43, 0x6e,
	0xbe, 0x30, 0xaa, 0x4d, 0x25, 0xf8, 0x8e, 0xe0, 0xe2, 0x1d, 0x53, 0x8a, 0x4b, 0x91, 0xb0, 0x7d,
	0xcd, 0x94, 0xc6, 0x77, 0xc0, 0xaa, 0xab, 0xc2, 0x45, 0x3e, 0x0a, 0xcf, 0x93, 0xf6, 0x13, 0x3f,
	0x02, 0xa0, 0x52, 0xec, 0xf8, 0x96, 0x09, 0xca, 0xdc, 0x89, 0x8f, 0xc2, 0x69, 0x32, 0x52, 0xf0,
	0x63, 0x70, 0xa8, 0x14, 0x9a, 0x09, 0x9d, 0xe6, 0x99, 0xca, 0x5d, 0xab, 0x6b, 0xb5, 0x7b, 0xed,
	0x4d, 0xa6, 0x72, 0xfc, 0x04, 0x2c, 0x5d, 0x94, 0xee, 0xd4, 0x47, 0xe1, 0xc5, 0xec, 0x3e, 0x39,
	0xf0, 0x90, 0x26, 0x22, 0xef, 0x97, 0xf1, 0x92, 0x35, 0xac, 0x48, 0x5a, 0x47, 0xf0, 0x1c, 0x6e,
	0x0f, 0x3c, 0xaa, 0x94, 0x42, 0x31, 0x7c, 0x09, 0xa0, 0x8c, 0x94, 0xf2, 0x6d, 0xcf, 0x75, 0xde,
	0x2b, 0x8b, 0x6d, 0xf0, 0x01, 0xec, 0xb8, 0x56, 0xf9, 0x01, 0xff, 0xff, 0x6e, 0xfc, 0x0c, 0xce,
	0x4c, 0x00, 0xdd, 0x1c, 0xf6, 0xec, 0xde, 0x09, 0xcb, 0xdb, 0xae, 0x94, 0xf4, 0x96, 0x20, 0x06,
	0xc7, 0xfc, 0xfa, 0x46, 0x24, 0x6d, 0x0e, 0xa6, 0x31, 0xa5, 0xb2, 0x16, 0xba, 0x4f, 0xca, 0x36,
	0xda, 0xbc, 0x95, 0x66, 0x3f, 0x10, 0x38, 0xf3, 0xc3, 0xf2, 0x5e, 0xc5, 0x0b, 0xfc, 0x1a, 0x6e,
	0xf5, 0xf3, 0xe2, 0x87, 0x64, 0xbc, 0x56, 0x72, 0xba, 0x16, 0xef, 0xf2, 0x1f, 0xd5, 0x1e, 0xed,
	0x25, 0x4c, 0x5b, 0x54, 0xfc, 0xe0, 0xd4, 0x36, 0x4a, 0xc6, 0xf3, 0xfe, 0x56, 0x32, 0xed, 0x21,
	0xba, 0xde, 0xc3, 0x53, 0x59, 0x7d, 0x26, 0xdf, 0x98, 0xe0, 0x3a, 0xcf, 0x2a, 0xc2, 0x25, 0x1d,
	0x92, 0x69, 0x2f, 0x6f, 0xdc, 0x7b, 0x7d, 0xf7, 0x38, 0x43, 0xc9, 0xe3, 0xf6, 0x92, 0x62, 0xf4,
	0xd1, 0x1e, 0x2c, 0x4d, 0xf4, 0x73, 0x62, 0xcd, 0xd7, 0xeb, 0x5f, 0x93, 0xe3, 0xb0, 0x64, 0x15,
	0xfd, 0x1e, 0x3d, 0x3f, 0xad, 0xa2, 0xcd, 0x59, 0x77, 0x83, 0x2f, 0xfe, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xcb, 0x00, 0x3a, 0x98, 0xf1, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CollectorAPIClient is the client API for CollectorAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollectorAPIClient interface {
	// Session register a new session for observable.
	Session(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*SessionResponse, error)
	// Push is used to push observable in a given session.
	Push(ctx context.Context, opts ...grpc.CallOption) (CollectorAPI_PushClient, error)
}

type collectorAPIClient struct {
	cc *grpc.ClientConn
}

func NewCollectorAPIClient(cc *grpc.ClientConn) CollectorAPIClient {
	return &collectorAPIClient{cc}
}

func (c *collectorAPIClient) Session(ctx context.Context, in *SessionRequest, opts ...grpc.CallOption) (*SessionResponse, error) {
	out := new(SessionResponse)
	err := c.cc.Invoke(ctx, "/collector.v1.CollectorAPI/Session", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collectorAPIClient) Push(ctx context.Context, opts ...grpc.CallOption) (CollectorAPI_PushClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CollectorAPI_serviceDesc.Streams[0], "/collector.v1.CollectorAPI/Push", opts...)
	if err != nil {
		return nil, err
	}
	x := &collectorAPIPushClient{stream}
	return x, nil
}

type CollectorAPI_PushClient interface {
	Send(*PushRequest) error
	CloseAndRecv() (*PushResponse, error)
	grpc.ClientStream
}

type collectorAPIPushClient struct {
	grpc.ClientStream
}

func (x *collectorAPIPushClient) Send(m *PushRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *collectorAPIPushClient) CloseAndRecv() (*PushResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(PushResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CollectorAPIServer is the server API for CollectorAPI service.
type CollectorAPIServer interface {
	// Session register a new session for observable.
	Session(context.Context, *SessionRequest) (*SessionResponse, error)
	// Push is used to push observable in a given session.
	Push(CollectorAPI_PushServer) error
}

func RegisterCollectorAPIServer(s *grpc.Server, srv CollectorAPIServer) {
	s.RegisterService(&_CollectorAPI_serviceDesc, srv)
}

func _CollectorAPI_Session_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollectorAPIServer).Session(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/collector.v1.CollectorAPI/Session",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollectorAPIServer).Session(ctx, req.(*SessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollectorAPI_Push_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CollectorAPIServer).Push(&collectorAPIPushServer{stream})
}

type CollectorAPI_PushServer interface {
	SendAndClose(*PushResponse) error
	Recv() (*PushRequest, error)
	grpc.ServerStream
}

type collectorAPIPushServer struct {
	grpc.ServerStream
}

func (x *collectorAPIPushServer) SendAndClose(m *PushResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *collectorAPIPushServer) Recv() (*PushRequest, error) {
	m := new(PushRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CollectorAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "collector.v1.CollectorAPI",
	HandlerType: (*CollectorAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Session",
			Handler:    _CollectorAPI_Session_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Push",
			Handler:       _CollectorAPI_Push_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "collector/v1/collector_api.proto",
}
